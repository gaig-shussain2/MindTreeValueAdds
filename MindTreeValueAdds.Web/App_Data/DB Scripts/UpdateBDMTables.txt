-- Select RPM Tree Viewer Data.
SELECT submission_id, QUOTE_ID,
EXTRACT(xmltype(utl_compress.lz_uncompress(quote_bin), (select nls_charset_id('UTF8') from dual)), '//obj[@id="&RPMObjectIDForTOTAPRPTS"]/field[@name="PremiumAmount"]/t/@value').getStringVal() as TOTAPRPTS,
EXTRACT(xmltype(utl_compress.lz_uncompress(quote_bin), (select nls_charset_id('UTF8') from dual)), '//obj[@id="&RPMObjectIDForTOTAPRPXTS"]/field[@name="PremiumAmount"]/t/@value').getStringVal() as TOTAPRPXTS,
EXTRACT(xmltype(utl_compress.lz_uncompress(quote_bin), (select nls_charset_id('UTF8') from dual)), '//obj[@id="&RPMObjectIDForTOTAPRPPremium"]/field[@name="PremiumAmount"]/t/@value').getStringVal() as TOTAPRPPremium
FROM ramt.quote WHERE submission_id = '&SUBMISSION_ID' and QUOTE_ID in ('&Quote_ID');

-- Update RPM Tree Viewer Data.
SET SERVEROUTPUT ON;
DECLARE
original xmltype;
charset int := NLS_CHARSET_ID ('UTF8');
updatedxml xmltype;
blobby blob;
compressed blob;
BEGIN
for row in (SELECT quote_bin as bin, submission_id as id from ramt.quote where submission_id = '&SUBMISSION_ID' and QUOTE_ID in ('&Quote_ID')) LOOP
	original := xmltype(utl_compress.lz_uncompress(row.bin), charset);

SELECT updatexml(original, '//obj[@id="&RPMObjectIDForTOTAPRPTS"]/field[@name="PremiumAmount"]/t/@value', '&NewTOTAPRPTS') into updatedxml from dual;
SELECT updatexml(updatedxml, '//obj[@id="&RPMObjectIDForTOTAPRPXTS"]/field[@name="PremiumAmount"]/t/@value', '&NewTOTAPRPXTS') into updatedxml from dual;
SELECT updatexml(updatedxml, '//obj[@id="&RPMObjectIDForTOTAPRPPremium"]/field[@name="PremiumAmount"]/t/@value', '&NewTOTAPRPPremium') into updatedxml from dual;

DBMS_LOB.CREATETEMPORARY(blobby, true);
DBMS_LOB.CREATETEMPORARY(compressed, true);
SELECT xmlserialize(document updatedxml as BLOB encoding 'UTF-8' no indent) into blobby from dual;
utl_compress.lz_compress(blobby, compressed);
DBMS_LOB.FREETEMPORARY(blobby);

update ramt.quote set quote_bin = compressed where submission_id = row.id;

DBMS_LOB.FREETEMPORARY(compressed);
END LOOP;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;

--COMMIT;

